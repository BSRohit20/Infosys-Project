name: AI Guest Experience System CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Test with pytest
      run: |
        pytest tests/ -v
      env:
        ENVIRONMENT: testing
        SECRET_KEY: test-secret-key
        SLACK_WEBHOOK_URL: https://hooks.slack.com/test
    
    - name: Test AI services
      run: |
        python -c "
        from app.services.sentiment_service import sentiment_service
        from app.services.recommendation_service import recommendation_service
        print('‚úÖ AI services import successfully')
        "

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build application
      run: |
        echo "Building AI Guest Experience System..."
        python -c "
        from app.main import app
        print('‚úÖ Application builds successfully')
        "
    
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        # Add your deployment commands here
        # For example, deploy to Heroku, AWS, or other cloud platforms
    
    - name: Run health check
      run: |
        echo "üè• Running health check..."
        # Add health check commands here

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      run: |
        pip install safety bandit
        safety check
        bandit -r app/ -f json -o security-report.json || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.json
